{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "javarest",
		"language": "JAVA",
		"artifact_store": {
			"type": "s3",
			"repositories": [
				{
					"category": "rc-packaging",
					"bucket": "guide-rails-calculi-rc"
				},
				{
					"category": "final-packaging",
					"bucket": "guide-rails-calculi-final"
				},
				{
					"category": "logs",
					"bucket": "guide-rails-calculi-logs"
				}
			]
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"code_analysis": {
							"publish": true,
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"code_analysis": null
					},
					"on_failure": {
						"code_analysis": null
					},
					"on_abort": {
						"code_analysis": null
					}
				},
				"properties": [
					{
						"name": "gradle.user.home",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "ivy.defaultCacheDir",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "maven.repo.local",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created"
					},
					{
						"name": "additional_properties_file",
						"value": "sonar-project.properties",
						"type": "string"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"packages": [
					{
						"name": "javarest",
						"downloads": [],
						"files": [
							"SpringBootServer*.war"
						]
					},
					{
						"name": "integration-tests",
						"downloads": [],
						"files": [
							"integration-test.tar"
						]
					},
					{
						"name": "jdk",
						"downloads": [],
						"files": [
							"jdk/bin",
							"jdk/lib",
							"jdk/conf",
							"jdk/jmods"
						]
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "javarest",
						"steps": [
							{
								"name": "Install JDK 12",
								"definition": "Install JDK 12",
								"command": "curl -O https://cdn.azul.com/zulu/bin/zulu12.3.11-ca-jdk12.0.2-linux_x64.tar.gz\nls\ntar xf zulu12.3.11-ca-jdk12.0.2-linux_x64.tar.gz\nmv zulu12.3.11-ca-jdk12.0.2-linux_x64 jdk",
								"properties": null
							},
							{
								"name": "Build",
								"definition": "Build",
								"command": "export JAVA_HOME=${PWD}/jdk\n./gradlew build --no-daemon\ncp build/test-results/test/TEST-com.calculi.springbootserver.math.MathControllerTest.xml test.xml\ncp build/reports/jacoco/test/jacocoTestReport.xml coverage.xml\ncp build/libs/*.war .",
								"properties": null
							},
							{
								"name": "Build Integration Package",
								"definition": "Build Integration Package",
								"command": "tar -cf integration-test.tar -X .tarignore *",
								"properties": null
							}
						]
					}
				]
			},
			{
				"name": "Integration",
				"segment_type": "integration",
				"run_after": [
					"Build"
				],
				"job_steps": [
					{
						"name": "Prepare Integration Tests",
						"definition": "Prepare Integration Tests",
						"command": "tar xf ${PKG_BASE_DIR}/integration-tests/integration-test.tar",
						"properties": null
					},
					{
						"name": "Run Tests",
						"definition": "Run Tests",
						"command": "export JAVA_HOME=${PKG_BASE_DIR}/jdk\n./gradlew integrationTest --no-daemon\ncp build/test-results/integrationTest/TEST-MathIntegrationTest.xml ${TEST_LOGS_DIR}/test.xml",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"code_analysis": {
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"code_analysis": {
							"properties": null
						}
					},
					"on_failure": {
						"code_analysis": {
							"properties": null
						}
					},
					"on_abort": {
						"code_analysis": {
							"properties": null
						}
					}
				},
				"properties": [
					{
						"name": "consul.servicename",
						"value": "((consul.servicename))",
						"type": "string"
					}
				],
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"process": {
					"init": {}
				},
				"package_dependencies": [
					"javarest",
					"jdk",
					"integration-tests"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 1,
						"cloud_provider_type": "aws",
						"vm_type": "medium",
						"os_type": "default",
						"networks": [
							"integration"
						],
						"availability_zones": [
							"default"
						],
						"deployment_strategy": {},
						"dependencies": [
							{
								"name": "consul",
								"release": "consul",
								"provides": [
									{
										"name": "consul_servers.as",
										"value": "consul_1"
									}
								],
								"consumes": [
									{
										"name": "consul_servers.from",
										"value": "consul_1"
									}
								],
								"properties": [
									{
										"name": "consul.servicename",
										"value": "((consul.servicename))"
									},
									{
										"name": "consul.environment",
										"value": "((consul.environment))"
									},
									{
										"name": "consul.datacenter",
										"value": "((consul.datacenter))"
									},
									{
										"name": "consul.server",
										"value": "false"
									},
									{
										"name": "consul.joinservers",
										"value": "((consul.joinservers))"
									},
									{
										"name": "calculi.intermediate.cert",
										"value": "grsecret:tls.cert"
									},
									{
										"name": "calculi.intermediate.key",
										"value": "grsecret:tls.key"
									}
								]
							}
						]
					}
				],
				"post_deployment_actions": {
					"loadbalancer": {}
				},
				"deployment_target": 1,
				"releases": [
					{
						"name": "consul",
						"version": "latest"
					}
				]
			}
		],
		"exit_actions": {
			"default": {
				"fetch_logs": true,
				"code_analysis": {
					"properties": null
				},
				"delete_instances": true
			},
			"on_success": {
				"code_analysis": null
			},
			"on_failure": {
				"code_analysis": null
			},
			"on_abort": {
				"code_analysis": null
			}
		},
		"default_properties": [],
		"deployment_files": [
			{
				"source_path": "ci/bin/start.sh",
				"target_path": "bin/start.sh"
			}
		],
		"application_init": {},
		"process": {
			"init": {
				"command": "bin/start.sh"
			},
			"stop": {
				"command": [
					"kill `cat ${APPLICATION_PID_FILE}`"
				]
			},
			"pid": {
				"command": [
					"ps -A -o pid,cmd | grep java | grep -v grep | head -n 1 | awk '{print $1}'\u003e${APPLICATION_PID_FILE}"
				]
			}
		}
	},
	"organization": {
		"orgname": "Tutorial"
	}
}